{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc\\\\OneDrive\\\\Desktop\\\\Dikshit\\\\LMS\\\\frontend\\\\src\\\\views\\\\User.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSession, getSession } from 'react-session';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [session, setSession] = useSession();\n  const submit = async e => {\n    e.preventDefault();\n\n    // Simulate an API call to validate the user's credentials\n    const isValidUser = await validateUser(email, password);\n    if (isValidUser) {\n      // Store the user's email and other details in session storage\n      setSession({\n        user: {\n          email: email\n          // Add other user details here\n        }\n      });\n\n      // Display the user's email and other details on the user.js page\n      console.log('User details:', session.user);\n    } else {\n      console.log('Invalid email or password');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 mx-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-center\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: submit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: e => setPassword(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: submit,\n            disabled: !email || !password,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"small text-muted\",\n              children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/registration\",\n                children: \"Register here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"small text-muted\",\n              children: [\"Forgot your password? \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/ForgotPassword\",\n                children: \"Reset it here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n// Simulate an API call to validate the user's credentials\n_s(Login, \"WP4+56HX+nRLOpJ8MPKdTjrtpGM=\", false, function () {\n  return [useSession];\n});\n_c = Login;\nconst validateUser = async (email, password) => {\n  // Replace this with an actual API call\n  const response = await fetch('https://api.example.com/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  if (response.ok) {\n    return true;\n  } else {\n    return false;\n  }\n};\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useSession","getSession","Link","jsxDEV","_jsxDEV","Login","_s","email","setEmail","password","setPassword","session","setSession","submit","e","preventDefault","isValidUser","validateUser","user","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","value","onChange","target","onClick","disabled","to","_c","response","fetch","method","headers","body","JSON","stringify","ok","$RefreshReg$"],"sources":["C:/Users/pc/OneDrive/Desktop/Dikshit/LMS/frontend/src/views/User.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSession, getSession } from 'react-session';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [session, setSession] = useSession();\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Simulate an API call to validate the user's credentials\r\n    const isValidUser = await validateUser(email, password);\r\n\r\n    if (isValidUser) {\r\n      // Store the user's email and other details in session storage\r\n      setSession({\r\n        user: {\r\n          email: email,\r\n          // Add other user details here\r\n        },\r\n      });\r\n\r\n      // Display the user's email and other details on the user.js page\r\n      console.log('User details:', session.user);\r\n    } else {\r\n      console.log('Invalid email or password');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-6 mx-auto\">\r\n          <h1 className=\"text-center\">Login</h1>\r\n\r\n          <form onSubmit={submit}>\r\n            <label>Email</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n\r\n            <button\r\n              type=\"button\"\r\n              onClick={submit}\r\n              disabled={!email || !password}\r\n            >\r\n              Login\r\n            </button>\r\n\r\n            <div className=\"mt-3 text-center\">\r\n              <p className=\"small text-muted\">\r\n                Don't have an account? <Link to=\"/registration\">Register here</Link>\r\n              </p>\r\n              <p className=\"small text-muted\">\r\n                Forgot your password? <Link to=\"/ForgotPassword\">Reset it here</Link>\r\n              </p>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Simulate an API call to validate the user's credentials\r\nconst validateUser = async (email, password) => {\r\n  // Replace this with an actual API call\r\n  const response = await fetch('https://api.example.com/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email, password }),\r\n  });\r\n\r\n  if (response.ok) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}